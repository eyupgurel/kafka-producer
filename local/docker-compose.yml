version: "3.7"
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    hostname: zookeeper
    ports:
      - "22181:2181"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
      - ZOOKEEPER_CLIENT_PORT=2181
  kafka-broker1:
    image: confluentinc/cp-kafka:latest
    container_name: kafka-broker1
    hostname: kafka-broker1
    ports:
      - "9091:9091"
      - "19091:19091"
      - "29091:29091"
    environment:
      KAFKA_LISTENERS: LISTENER_DOCKER_INTERNAL://kafka-broker1:19091,LISTENER_DOCKER_EXTERNAL://kafka-broker1:9091,LISTENER_LOCAL://kafka-broker1:29091
      KAFKA_ADVERTISED_LISTENERS: LISTENER_DOCKER_INTERNAL://kafka-broker1:19091,LISTENER_DOCKER_EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:9091,LISTENER_LOCAL://localhost:29091
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: LISTENER_DOCKER_INTERNAL:PLAINTEXT,LISTENER_DOCKER_EXTERNAL:PLAINTEXT,LISTENER_LOCAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: LISTENER_DOCKER_INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_BROKER_ID: 1
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      - zookeeper
  kafka-broker2:
    image: confluentinc/cp-kafka:latest
    container_name: kafka-broker2
    hostname: kafka-broker2
    ports:
      - "9092:9092"
      - "19092:19092"
      - "29092:29092"
    environment:
      KAFKA_LISTENERS: LISTENER_DOCKER_INTERNAL://kafka-broker2:19092,LISTENER_DOCKER_EXTERNAL://kafka-broker2:9092,LISTENER_LOCAL://kafka-broker2:29092
      KAFKA_ADVERTISED_LISTENERS: LISTENER_DOCKER_INTERNAL://kafka-broker2:19092,LISTENER_DOCKER_EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:9092,LISTENER_LOCAL://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: LISTENER_DOCKER_INTERNAL:PLAINTEXT,LISTENER_DOCKER_EXTERNAL:PLAINTEXT,LISTENER_LOCAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: LISTENER_DOCKER_INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_BROKER_ID: 2
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      - zookeeper
  kafka-broker3:
    image: confluentinc/cp-kafka:latest
    container_name: kafka-broker3
    hostname: kafka-broker3
    ports:
      - "9093:9093"
      - "19093:19093"
      - "29093:29093"
    environment:
      KAFKA_LISTENERS: LISTENER_DOCKER_INTERNAL://kafka-broker3:19093,LISTENER_DOCKER_EXTERNAL://kafka-broker3:9093,LISTENER_LOCAL://kafka-broker3:29093
      KAFKA_ADVERTISED_LISTENERS: LISTENER_DOCKER_INTERNAL://kafka-broker3:19093,LISTENER_DOCKER_EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:9093,LISTENER_LOCAL://localhost:29093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: LISTENER_DOCKER_INTERNAL:PLAINTEXT,LISTENER_DOCKER_EXTERNAL:PLAINTEXT,LISTENER_LOCAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: LISTENER_DOCKER_INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_BROKER_ID: 3
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      - zookeeper
  create-topics:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - "kafka-broker1"
      - "kafka-broker2"
      - "kafka-broker3"
    entrypoint: ["/bin/sh", "-c"]
    command: |
      "
      # blocks until kafka is reachable
      kafka-topics --bootstrap-server kafka-broker1:19091 --list
      
      echo -e 'Creating kafka topics'
      kafka-topics --bootstrap-server kafka-broker1:19091 --create --if-not-exists --topic socket-events-local --replication-factor 3 --partitions 3
      kafka-topics --bootstrap-server kafka-broker1:19091 --create --if-not-exists --topic sui-events --replication-factor 3 --partitions 3
      kafka-topics --bootstrap-server kafka-broker1:19091 --create --if-not-exists --topic socket-event-emit --replication-factor 3 --partitions 3
      
      echo -e 'Successfully created the following topics:'
      kafka-topics --bootstrap-server kafka-broker1:19091 --list
      "
